<!DOCTYPE html>
<html>

<head>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono&amp;display=swap" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xterm@4.9.0/css/xterm.css">
    <script src="https://cdn.jsdelivr.net/npm/xterm@4.9.0/lib/xterm.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xterm-addon-fit@0.4.0/lib/xterm-addon-fit.js"></script>
    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <style>
        html,
        body {
            margin: 0;
            height: 100%;
            background-color: black;
            overflow: hidden;
        }

        .xterm .xterm-viewport {
            /* On OS X this is required in order for the scroll bar to appear fully opaque */
            background-color: transparent;
            cursor: default;
            position: absolute;
            right: 0;
            left: 0;
            top: 0;
            bottom: 0;
            scrollbar-color: var(--highlight) var(--dark);
            scrollbar-width: thin;
        }

        .xterm-viewport::-webkit-scrollbar {
            background-color: var(--dark);
            width: 5px;
        }

        .xterm-viewport::-webkit-scrollbar-thumb {
            background: var(--highlight);
        }
    </style>
</head>

<body>
    <div id="terminal">
        <!-- <button class="waves-effect waves-light grey darken-4 btn-small"
            onclick="document.getElementById('terminal').requestFullscreen().then(() => {}).catch((err) => { console.log(err) })">Fullscreen</button> -->
    </div>
    <script>
        var term = new Terminal({
            fontFamily: "Roboto Mono"
        });
        const fitAddon = new FitAddon.FitAddon()
        term.loadAddon(fitAddon)

        var socket = io()
        console.log(socket)
        term.clear()
        term.onKey((key) => {
            console.log(key)
            socket.emit('key', key.key)
        })

        socket.on('data', (msg) => {
            term.write(msg)
        })

        term.open(document.getElementById('terminal'));
        term.onResize(() => {
            socket.emit('resize', {
                rows: term.rows,
                cols: term.cols
            })
        })
        fitAddon.fit()
        window.onresize = () => {
            fitAddon.fit()
        };
        term.write('\x1b[?47h')
    </script>


</body>

</html>